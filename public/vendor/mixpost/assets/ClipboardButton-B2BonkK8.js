var g=Object.defineProperty;var y=(t,e,s)=>e in t?g(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var n=(t,e,s)=>y(t,typeof e!="symbol"?e+"":e,s);import{u as f}from"./vue-i18n-CbxO4HOa.js";import{u as h,Y as M,a as S,g as k}from"./app-CbUEMLPN.js";import{C as _}from"./Clipboard-szG3aGAU.js";import{r as B,k as a,y as i,z as l,C as o,l as p,J as C,A as v,u as b,B as $}from"./@vue-DxEuNGre.js";class u{static setSuccessMessage(e){return this.successMessage=e,this}static setErrorMessage(e){return this.errorMessage=e,this}static async copy(e){const{notify:s}=h();if(navigator.clipboard)try{await navigator.clipboard.writeText(e),s("success",this.successMessage)}catch{s("error",this.errorMessage)}else s("error","Clipboard API not supported!")}}n(u,"successMessage",""),n(u,"errorMessage","");const w={key:0},z={key:1},D={__name:"ClipboardButton",props:{component:{type:String,default:"PrimaryButton"},componentSize:{type:String,default:"md"},showText:{type:Boolean,default:!0},htmlElm:{type:[Object,String],required:!0},successMessage:{type:String,default:""},errorMessage:{type:String,default:""}},setup(t){const{t:e}=f(),s=t,r=B(null),m={PrimaryButton:S,PureButton:k},d=()=>{u.setSuccessMessage(s.successMessage?s.successMessage:e("system.copied_clipboard")).setErrorMessage(s.errorMessage?s.errorMessage:e("system.failed_copied_clipboard")).copy(s.htmlElm.innerText).then(()=>{r.value=!0,setTimeout(()=>{r.value=null},2e3)}).catch(()=>{r.value=!1})};return(c,E)=>(a(),i($(m[t.component]),{onClick:d,size:t.componentSize},{icon:l(()=>[r.value===null?(a(),i(_,{key:0})):o("",!0),r.value===!0?(a(),i(M,{key:1})):o("",!0)]),default:l(()=>[c.$slots.default?(a(),p("span",w,[C(c.$slots,"default")])):o("",!0),!c.$slots.default&&t.showText?(a(),p("span",z,v(b(e)("system.copy")),1)):o("",!0)]),_:3},8,["size"]))}};export{D as _};
